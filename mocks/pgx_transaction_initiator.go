// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	pgx "github.com/jackc/pgx/v5"
)

// PgxTransactionInitiator is an autogenerated mock type for the PgxTransactionInitiator type
type PgxTransactionInitiator struct {
	mock.Mock
}

// BeginTx provides a mock function with given fields: ctx, txOptions
func (_m *PgxTransactionInitiator) BeginTx(ctx context.Context, txOptions pgx.TxOptions) (pgx.Tx, error) {
	ret := _m.Called(ctx, txOptions)

	var r0 pgx.Tx
	if rf, ok := ret.Get(0).(func(context.Context, pgx.TxOptions) pgx.Tx); ok {
		r0 = rf(ctx, txOptions)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(pgx.Tx)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, pgx.TxOptions) error); ok {
		r1 = rf(ctx, txOptions)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewPgxTransactionInitiator interface {
	mock.TestingT
	Cleanup(func())
}

// NewPgxTransactionInitiator creates a new instance of PgxTransactionInitiator. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewPgxTransactionInitiator(t mockConstructorTestingTNewPgxTransactionInitiator) *PgxTransactionInitiator {
	mock := &PgxTransactionInitiator{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
