// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Tracer is an autogenerated mock type for the Tracer type
type Tracer struct {
	mock.Mock
}

// TraceData provides a mock function with given fields: request
func (_m *Tracer) TraceData(request string) func() {
	ret := _m.Called(request)

	var r0 func()
	if rf, ok := ret.Get(0).(func(string) func()); ok {
		r0 = rf(request)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(func())
		}
	}

	return r0
}

type mockConstructorTestingTNewTracer interface {
	mock.TestingT
	Cleanup(func())
}

// NewTracer creates a new instance of Tracer. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewTracer(t mockConstructorTestingTNewTracer) *Tracer {
	mock := &Tracer{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
